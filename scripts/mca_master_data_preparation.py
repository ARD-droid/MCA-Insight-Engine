# -*- coding: utf-8 -*-
"""MCA_Master_Data_Preparation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ylJKWcAY80jJiMy9BdtQ0ytgdcjNr1h4
"""

import pandas as pd
import numpy as np

## checking for missing values
df_maharastra=pd.read_csv('/content/Data_Gov_Maharashtra.csv',encoding='ISO-8859-1', low_memory=False)
df_Delhi=pd.read_csv('/content/Data_Gov_Delhi.csv',encoding='ISO-8859-1', low_memory=False)
df_Gujrat=pd.read_csv('/content/Data_Gov_Gujarat.csv',encoding='ISO-8859-1', low_memory=False)
df_Karanataka=pd.read_csv('/content/Data_Gov_Karnataka.csv',encoding='ISO-8859-1', low_memory=False)
df_Tamil_Nadu=pd.read_csv('/content/Data_Gov_Tamil_Nadu.csv',encoding='ISO-8859-1', low_memory=False)

print(df_Gujrat.columns)   #True/False per column.

# Droping the duplicate row if any according to unique CIN number
df_maharastra.drop_duplicates(subset='CORPORATE_IDENTIFICATION_NUMBER',inplace=True)
df_Delhi.drop_duplicates(subset='CORPORATE_IDENTIFICATION_NUMBER',inplace=True)

print(df_maharastra.dtypes)
print(df_maharastra.dtypes)
print(df_Delhi.dtypes)
print(df_Tamil_Nadu.dtypes)
print(df_Karanataka.dtypes)
print(df_Gujrat.dtypes)

def clean_state_data(x):
  # Droping the duplicate row if any according to unique CIN number
 x.drop_duplicates(inplace=True)


 ## Filling missing values for object columns
 obj_coloum=x.select_dtypes(include='object').columns
 x[obj_coloum] = x[obj_coloum].replace(r'^\s*$', np.nan, regex=True)
 for col in obj_coloum:
  x[col].fillna("",inplace=True)

 ## Filling missing values for numeric columns
 Num_col=x.select_dtypes(include=['number']).columns
 for col in Num_col:
  x[col].fillna(x[col].median(),inplace=True)

 return x

df_maha_clean=clean_state_data(df_maharastra)
df_delhi_clean=clean_state_data(df_Delhi)
df_Gujrat_clean=clean_state_data(df_Gujrat)
df_Karnataka_clean=clean_state_data(df_Karanataka)
df_Tamilnadu_clean=clean_state_data(df_Tamil_Nadu)

print(df_Gujrat_clean.isnull().any())

df_maha_clean['STATE'] = 'Maharashtra'
df_delhi_clean['STATE'] = 'Delhi'
df_Gujrat_clean['STATE'] = 'Gujarat'
df_Karnataka_clean['STATE'] = 'Karnataka'
df_Tamilnadu_clean['STATE'] = 'Tamil Nadu'

columns_master = [
    'CORPORATE_IDENTIFICATION_NUMBER', 'COMPANY_NAME', 'COMPANY_STATUS',
    'COMPANY_CLASS', 'COMPANY_CATEGORY', 'COMPANY_SUB_CATEGORY',
    'DATE_OF_REGISTRATION', 'REGISTERED_STATE', 'AUTHORIZED_CAP',
    'PAIDUP_CAPITAL', 'INDUSTRIAL_CLASS',
    'PRINCIPAL_BUSINESS_ACTIVITY_AS_PER_CIN', 'REGISTERED_OFFICE_ADDRESS',
    'REGISTRAR_OF_COMPANIES', 'EMAIL_ADDR', 'LATEST_YEAR_ANNUAL_RETURN',
    'LATEST_YEAR_FINANCIAL_STATEMENT', 'STATE'
]

master_df = pd.concat([df_maha_clean, df_delhi_clean, df_Gujrat_clean, df_Karnataka_clean, df_Tamilnadu_clean], ignore_index=True)

# Enforce column order
master_df = master_df[columns_master]

# Save to CSV
master_df=clean_state_data(master_df)
master_df.to_csv('/content/MCA-Insight-Engine/Data/Master Data/Master_Company_Data.csv', index=False)

print(master_df.isnull().any())

df_maha_clean.to_csv('/content/MCA-Insight-Engine/Data/Cleaned Data/Data_Gov_Maharashtra_clean.csv', index=False)
df_delhi_clean.to_csv('/content/MCA-Insight-Engine/Data/Cleaned Data/Data_Gov_Delhi_clean.csv', index=False)
df_Gujrat_clean.to_csv('/content/MCA-Insight-Engine/Data/Cleaned Data/Data_Gov_Gujarat_clean.csv', index=False)
df_Karnataka_clean.to_csv('/content/MCA-Insight-Engine/Data/Cleaned Data/Data_Gov_Karnataka_clean.csv', index=False)
df_Tamilnadu_clean.to_csv('/content/MCA-Insight-Engine/Data/Cleaned Data/Data_Gov_Tamil_Nadu_clean.csv', index=False)